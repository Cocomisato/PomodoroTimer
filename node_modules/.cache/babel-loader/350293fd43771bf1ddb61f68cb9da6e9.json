{"ast":null,"code":"var _jsxFileName = \"/Users/misato/Documents/Coding/Qualified/Project_Pomodoro_timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\"; // These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  //  console.log(prevState)\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const timeClock = num => {\n    let minutes = Math.floor(num / 60);\n    let seconds = num - minutes * 60;\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    return minutes + \":\" + seconds;\n  };\n\n  const [focusDuration, setfocusDuration] = useState(25); // const focusDuration = 25;\n\n  const [breakDuration, setBreakDuration] = useState(5); // const breakDuration = 5;\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  const focusTimeHandler = event => {\n    if (event.target.id === \"minus\") {\n      if (focusDuration < 6) {\n        setfocusDuration(focusDuration);\n      } else {\n        setfocusDuration(focusDuration - 1);\n      }\n    } else {\n      if (focusDuration > 59) {\n        setfocusDuration(focusDuration);\n      } else {\n        setfocusDuration(focusDuration + 1);\n      }\n    }\n  };\n\n  const breakTimeHandler = event => {\n    if (event.target.id === \"minus\") {\n      if (breakDuration < 2) {\n        setBreakDuration(breakDuration);\n      } else {\n        setBreakDuration(breakDuration - 1);\n      }\n    } else {\n      if (breakDuration > 14) {\n        setBreakDuration(breakDuration);\n      } else {\n        setBreakDuration(breakDuration + 1);\n      }\n    }\n  };\n\n  const resetHandler = () => {\n    setSession(null);\n  };\n\n  const progressBar = () => {\n    if (session.label === \"Focusing\") {\n      const currentPercent = 1 - session.timeRemaining / (focusDuration * 60);\n      const percentNow = currentPercent * 100;\n      return percentNow;\n    } else {\n      const currentPercent = 1 - session.timeRemaining / (breakDuration * 60);\n      const percentNow = currentPercent * 100;\n      return percentNow;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", timeClock(focusDuration * 60)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    id: \"minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    onClick: focusTimeHandler,\n    id: \"minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    id: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    onClick: focusTimeHandler,\n    id: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", timeClock(breakDuration * 60)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    onClick: breakTimeHandler,\n    id: \"minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    onClick: breakTimeHandler,\n    id: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    onClick: resetHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", timeClock(focusDuration * 60), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, session ? timeClock(session.timeRemaining) : null, \" remaining\")) : null), session ? isTimerRunning ? null : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 43\n    }\n  }, \"PAUSED\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": progressBar() // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${progressBar()}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }))) : null)));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/misato/Documents/Coding/Qualified/Project_Pomodoro_timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","timeClock","num","minutes","floor","seconds","setfocusDuration","setBreakDuration","Audio","play","playPause","nextState","prevStateSession","focusTimeHandler","event","target","id","breakTimeHandler","resetHandler","progressBar","currentPercent","percentNow","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\n\n// These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  //  console.log(prevState)\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1)\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  \n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  \n  \n  const timeClock = (num) => {\n    let minutes = Math.floor(num / 60)\n    let seconds = num - (minutes * 60)\n    if (seconds < 10) {\n      seconds = \"0\" + seconds\n    }\n    if (minutes < 10) {\n      minutes = \"0\" + minutes\n    }\n    return minutes + \":\" + seconds\n  }\n\n  const [focusDuration, setfocusDuration] = useState(25)\n  // const focusDuration = 25;\n  const [breakDuration, setBreakDuration] = useState(5)\n  // const breakDuration = 5;\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n  \n\n    const focusTimeHandler = (event) => {\n      if (event.target.id === \"minus\") {\n        if (focusDuration < 6) {\n          setfocusDuration(focusDuration)\n        } else {\n        setfocusDuration(focusDuration - 1)\n       }\n     } else {\n       if (focusDuration > 59) {\n        setfocusDuration(focusDuration)\n       } else {\n        setfocusDuration(focusDuration + 1)\n       }\n      }\n    }\n    \n    const breakTimeHandler = (event) => {\n      if (event.target.id === \"minus\") {\n        if (breakDuration < 2) {\n          setBreakDuration(breakDuration)\n        } else {\n        setBreakDuration(breakDuration - 1)\n        }\n      } else {\n        if (breakDuration > 14) {\n          setBreakDuration(breakDuration)\n        } else {\n        setBreakDuration(breakDuration + 1)\n      }\n    }\n    }\n    \n    const resetHandler = () => {\n      setSession(null)\n    }\n    \n    const progressBar = () => {\n      if (session.label === \"Focusing\") {\n      const currentPercent = 1 - ((session.timeRemaining) / (focusDuration * 60))\n      const percentNow = (currentPercent * 100)\n      return percentNow\n      } else {\n      const currentPercent = 1 - ((session.timeRemaining) / (breakDuration * 60))\n      const percentNow = (currentPercent * 100)\n      return percentNow\n      }\n    }\n\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {timeClock((focusDuration * 60))}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n              >\n                {session? <span className=\"oi oi-minus\" id=\"minus\"/> :\n                <span className=\"oi oi-minus\" onClick={focusTimeHandler} id=\"minus\"/>\n                }\n              </button>\n              {/* TODO: Implement increasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n              >\n                {session? <span className=\"oi oi-plus\" id=\"plus\"/> :\n                <span className=\"oi oi-plus\" onClick={focusTimeHandler} id=\"plus\"/>\n                }\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {timeClock(breakDuration * 60)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                >\n                  {session? <span className=\"oi oi-minus\"/> : \n                  <span className=\"oi oi-minus\" onClick={breakTimeHandler} id=\"minus\"/>\n                  }\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                >\n                  {session? <span className=\"oi oi-plus\"/> : \n                  <span className=\"oi oi-plus\" onClick={breakTimeHandler} id=\"plus\"/>\n                  }\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            > \n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n              \n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n            \n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n            >\n              {session? \n              <span className=\"oi oi-media-stop\" onClick={resetHandler}/>\n              : <span className=\"oi oi-media-stop\" disabled={true}/>}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          {session?\n          <div className=\"col\" >\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {session?.label} for {timeClock(focusDuration * 60)} minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {session? timeClock(session.timeRemaining): null} remaining\n            </p>\n          </div>\n          : null}\n        </div>\n        {session? (isTimerRunning? null : <h2>PAUSED</h2>) : null}\n        <div className=\"row mb-2\">\n          {session?\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={progressBar()} // TODO: Increase aria-valuenow as elapsed time increases\n                style= {{width: `${progressBar()}%`}}  // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n          : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}